/* This file was generated by SableCC (http://www.sablecc.org/). */

using System;
using System.Collections;
using System.Text;

using  comp5210.analysis;

namespace comp5210.node {

public abstract class PFred : Node
{
}


public sealed class AFred : PFred
{
    private TPeriod _period_;

    public AFred ()
    {
    }

    public AFred (
            TPeriod _period_
    )
    {
        SetPeriod (_period_);
    }

    public override Object Clone()
    {
        return new AFred (
            (TPeriod)CloneNode (_period_)
        );
    }

    public override void Apply(Switch sw)
    {
        ((Analysis) sw).CaseAFred(this);
    }

    public TPeriod GetPeriod ()
    {
        return _period_;
    }

    public void SetPeriod (TPeriod node)
    {
        if(_period_ != null)
        {
            _period_.Parent(null);
        }

        if(node != null)
        {
            if(node.Parent() != null)
            {
                node.Parent().RemoveChild(node);
            }

            node.Parent(this);
        }

        _period_ = node;
    }

    public override string ToString()
    {
        return ""
            + ToString (_period_)
        ;
    }

    internal override void RemoveChild(Node child)
    {
        if ( _period_ == child )
        {
            _period_ = null;
            return;
        }
    }

    internal override void ReplaceChild(Node oldChild, Node newChild)
    {
        if ( _period_ == oldChild )
        {
            SetPeriod ((TPeriod) newChild);
            return;
        }
    }

}

public sealed class Start : Node
{
    private PFred _base_;
    private EOF _eof_;

    public Start()
    {
    }

    public Start(
        PFred _base_,
        EOF _eof_)
    {
        SetPFred(_base_);
        SetEOF(_eof_);
    }

    public override Object Clone()
    {
        return new Start(
            (PFred) CloneNode(_base_),
            (EOF) CloneNode(_eof_));
    }

    public override void Apply(Switch sw)
    {
        ((Analysis) sw).CaseStart(this);
    }

    public PFred GetPFred()
    {
        return _base_;
    }
    public void SetPFred(PFred node)
    {
        if(_base_ != null)
        {
            _base_.Parent(null);
        }

        if(node != null)
        {
            if(node.Parent() != null)
            {
                node.Parent().RemoveChild(node);
            }

            node.Parent(this);
        }

        _base_ = node;
    }

    public EOF GetEOF()
    {
        return _eof_;
    }
    public void SetEOF(EOF node)
    {
        if(_eof_ != null)
        {
            _eof_.Parent(null);
        }

        if(node != null)
        {
            if(node.Parent() != null)
            {
                node.Parent().RemoveChild(node);
            }

            node.Parent(this);
        }

        _eof_ = node;
    }

    internal override void RemoveChild(Node child)
    {
        if(_base_ == child)
        {
            _base_ = null;
            return;
        }

        if(_eof_ == child)
        {
            _eof_ = null;
            return;
        }
    }
    internal override void ReplaceChild(Node oldChild, Node newChild)
    {
        if(_base_ == oldChild)
        {
            SetPFred((PFred) newChild);
            return;
        }

        if(_eof_ == oldChild)
        {
            SetEOF((EOF) newChild);
            return;
        }
    }

    public override string ToString()
    {
        return "" +
            ToString(_base_) +
            ToString(_eof_);
    }
}
}
